package Abstraction;

import java.util.ArrayDeque;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;

public class Queues {

	public static void main(String[] args) {
		Queue<Integer> queue = new LinkedList<>();
        
        queue.offer(10);
        queue.offer(20);
        queue.offer(30);
        System.out.println(queue);
        System.out.println("Removed: " + queue.poll()); 
        System.out.println("First element: " + queue.peek());
        queue.poll();
        queue.poll();
        System.out.println("Is queue empty? " + queue.isEmpty());
        
        
        Queue<Integer> pqueue = new PriorityQueue<>();
        
        pqueue.offer(30);
        pqueue.offer(10);
        pqueue.offer(20);
        
        System.out.println("Removed: " + pqueue.poll()); 
        System.out.println("Removed: " + pqueue.poll());
        System.out.println("Is queue empty? " + pqueue.isEmpty());
        
        
        Queue<String> dqueue = new ArrayDeque<>();
        
        dqueue.offer("Alice");
        dqueue.offer("Bob");
        dqueue.offer("Charlie");
        
        System.out.println("Removed: " + queue.poll());
        System.out.println("Removed: " + queue.poll());
        System.out.println("Next element: " + queue.peek());

	}

}
